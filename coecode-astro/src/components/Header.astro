---
const currentPath = Astro.url.pathname;

const navItems = [
  { href: '/', label: 'Home' },
  { href: '/projects', label: 'Projects' },
  { 
    href: '/linc', 
    label: 'Linc',
    submenu: [
      { href: '/linc', label: 'Overview' },
      { href: '/linc/about', label: 'About' },
      { href: '/linc/press', label: 'Press Kit' }
    ]
  },
  { href: '/fitscape', label: 'Fitscape' },
  { href: '/connect', label: 'Connect' }
];
---

<header class="fixed top-0 w-full z-50 bg-black/90 backdrop-blur-lg border-b border-white/10" x-data="{ mobileOpen: false }">
  <div class="max-w-7xl mx-auto px-6 py-4 flex items-center justify-between">
    <!-- Logo -->
    <a 
      href="/" 
      class="flex items-center gap-3 text-xl font-medium hover:opacity-80 transition-opacity group"
    >
      <img 
        src="/images/logo.png" 
        alt="Coe Code" 
        class="w-8 h-8 rounded-lg transition-transform group-hover:scale-110"
      />
      <span>Coe Code</span>
    </a>

    <!-- Desktop Navigation -->
    <nav class="hidden md:flex items-center gap-6">
      {navItems.map((item) => {
        const isActive = currentPath === item.href || (currentPath.startsWith('/linc') && item.href === '/linc');
        
                 if (item.submenu) {
           return (
             <div class="relative" x-data="{ open: false, timeout: null }" 
                  @mouseenter="clearTimeout(timeout); open = true" 
                  @mouseleave="timeout = setTimeout(() => open = false, 150)">
               <button 
                 class={`
                   flex items-center gap-1 px-3 py-2 rounded-lg text-sm font-medium transition-all duration-300
                   hover:bg-white/10 hover:text-yellow-400
                   ${isActive ? 'text-yellow-400 bg-white/5' : 'text-white/70 hover:text-white'}
                 `}
               >
                 {item.label}
                 <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="transition-transform" :class="open ? 'rotate-180' : ''">
                   <path d="M6 9l6 6 6-6"/>
                 </svg>
               </button>
               
               <div 
                 class="absolute top-full left-0 mt-0 w-48 bg-black/95 backdrop-blur-lg border border-white/10 rounded-lg shadow-xl transition-all duration-200"
                 x-show="open"
                 x-transition:enter="transition ease-out duration-200"
                 x-transition:enter-start="opacity-0 -translate-y-1"
                 x-transition:enter-end="opacity-100 translate-y-0"
                 x-transition:leave="transition ease-in duration-150"
                 x-transition:leave-start="opacity-100 translate-y-0"
                 x-transition:leave-end="opacity-0 -translate-y-1"
               >
                {item.submenu.map((subItem) => {
                  const isSubActive = currentPath === subItem.href;
                  return (
                    <a 
                      href={subItem.href}
                      class={`
                        block px-4 py-3 text-sm transition-colors first:rounded-t-lg last:rounded-b-lg
                        hover:bg-white/10 hover:text-yellow-400
                        ${isSubActive ? 'text-yellow-400 bg-white/5' : 'text-white/70'}
                      `}
                    >
                      {subItem.label}
                    </a>
                  );
                })}
              </div>
            </div>
          );
        } else {
          return (
            <a 
              href={item.href}
              class={`
                px-3 py-2 rounded-lg text-sm font-medium transition-all duration-300
                hover:bg-white/10 hover:text-yellow-400
                ${isActive ? 'text-yellow-400 bg-white/5' : 'text-white/70 hover:text-white'}
              `}
            >
              {item.label}
            </a>
          );
        }
      })}
    </nav>

    <!-- Mobile Menu Button & Location -->
    <div class="flex items-center gap-4">
      <div class="hidden lg:block text-sm text-white/70">
        Missoula, MT
      </div>
      
      <!-- Mobile menu button -->
      <button 
        class="md:hidden p-2 rounded-lg hover:bg-white/10 transition-colors"
        @click="mobileOpen = !mobileOpen"
      >
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" :class="mobileOpen ? 'hidden' : 'block'">
          <path d="M3 12h18M3 6h18M3 18h18"/>
        </svg>
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" :class="mobileOpen ? 'block' : 'hidden'">
          <path d="M18 6L6 18M6 6l12 12"/>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <div 
    class="md:hidden border-t border-white/10 bg-black/95 backdrop-blur-lg"
    x-show="mobileOpen"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 -translate-y-2"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition ease-in duration-150"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 -translate-y-2"
  >
    <nav class="px-6 py-4 space-y-2">
      {navItems.map((item) => {
        const isActive = currentPath === item.href || (currentPath.startsWith('/linc') && item.href === '/linc');
        
        if (item.submenu) {
          return (
            <div x-data="{ submenuOpen: false }">
              <button 
                class={`
                  flex items-center justify-between w-full px-3 py-2 rounded-lg text-sm font-medium transition-all duration-300
                  hover:bg-white/10 hover:text-yellow-400
                  ${isActive ? 'text-yellow-400 bg-white/5' : 'text-white/70'}
                `}
                @click="submenuOpen = !submenuOpen"
              >
                {item.label}
                <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="transition-transform" :class="submenuOpen ? 'rotate-180' : ''">
                  <path d="M6 9l6 6 6-6"/>
                </svg>
              </button>
              
              <div 
                class="ml-4 mt-1 space-y-1"
                x-show="submenuOpen"
                x-transition
              >
                {item.submenu.map((subItem) => {
                  const isSubActive = currentPath === subItem.href;
                  return (
                    <a 
                      href={subItem.href}
                      class={`
                        block px-3 py-2 rounded-lg text-sm transition-colors
                        hover:bg-white/10 hover:text-yellow-400
                        ${isSubActive ? 'text-yellow-400 bg-white/5' : 'text-white/60'}
                      `}
                      @click="mobileOpen = false"
                    >
                      {subItem.label}
                    </a>
                  );
                })}
              </div>
            </div>
          );
        } else {
          return (
            <a 
              href={item.href}
              class={`
                block px-3 py-2 rounded-lg text-sm font-medium transition-all duration-300
                hover:bg-white/10 hover:text-yellow-400
                ${isActive ? 'text-yellow-400 bg-white/5' : 'text-white/70'}
              `}
              @click="mobileOpen = false"
            >
              {item.label}
            </a>
          );
        }
      })}
    </nav>
  </div>
</header>

<!-- Spacer for fixed header -->
<div class="h-20"></div> 